#!/usr/bin/env python3 
# This file is placed in the Public Domain.
# pylint: disable=R,C0413,C0415,W0105,W0212,W0611


"main program"


import getpass
import inspect
import os
import pathlib
import pwd
import readline
import sys
import termios
import time


sys.path.insert(0, os.getcwd())


from otp.client  import Client, Commands, Config, Event, command, scanner
from otp.client  import banner, daemon, forever, modnames, parse, wrap
from otp.object  import Default, keys
from otp.persist import Workdir
from otp.runtime import STARTTIME, Broker, Reactor
from otp.runtime import errors, later, launch


if os.path.exists('mods'):
    from mods import face
else:
    face = None


class Console(Client):

    "Console"

    def callback(self, evt):
        "wait for result."
        Client.callback(self, evt)
        if evt._thr:
            evt._thr.join()

    def poll(self):
        "poll console and create event."
        evt = Event()
        evt.orig = repr(self)
        evt.txt = input("> ")
        evt.type = "command"
        return evt

    def raw(self, txt):
        "print text."
        print(txt)


def wraps():
    "Wrap main."
    wrap(main)
    errors(print)


def main():
    "main"
    parse(Config, " ".join(sys.argv[1:]))
    Config.mod = ",".join(modnames(face))
    Config.user = getpass.getuser()
    if "d" in Config.opts:
        daemon()
        privileges(Config.user)
        pidfile(Config.pidfile)
        for mod in scanner(Config.mod, face):
            if "init" in dir(mod):
                mod.init()
        forever()
        return
    if "v" in Config.opts:
        banner(print)
    for mod in scanner(Config.mod, face):
         if "i" in Config.opts and "init" in dir(mod):
             mod.init()
    csl = Console()
    if "c" in Config.opts:
        csl.start()
        forever()
    elif Config.txt:
        evt = Event()
        evt.orig = repr(csl)
        return command(csl, evt, Config.otxt)


if __name__ == "__main__":
    wraps()
