#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=R,C0413,C0415,W0105,W0212


"main program"


import getpass
import os
import readline
import sys


sys.path.insert(0, os.getcwd())


from otp.client  import Client, Config, Event
from otp.client  import banner, command, daemon, forever, modnames, parse
from otp.client  import pidfile, privileges, scanner, wrap
from otp.runtime import errors


if os.path.exists('mods'):
    from mods import face as MODS
else:
    MODS = None


class Console(Client):

    "Console"

    def callback(self, evt):
        "wait for result."
        Client.callback(self, evt)
        if evt._thr:
            evt._thr.join()

    def poll(self):
        "poll console and create event."
        evt = Event()
        evt.orig = repr(self)
        evt.txt = input("> ")
        evt.type = "command"
        return evt

    def raw(self, txt):
        "print text."
        print(txt)


def main():
    "main"
    readline.redisplay()
    parse(Config, " ".join(sys.argv[1:]))
    Config.mod = ",".join(modnames(MODS))
    Config.user = getpass.getuser()
    if "d" in Config.opts:
        daemon()
        privileges(Config.user)
        pidfile(Config.pidfile)
        for mod in scanner(Config.mod, MODS):
            if "init" in dir(mod):
                mod.init()
        forever()
        return
    if "v" in Config.opts:
        banner(print)
    for mod in scanner(Config.mod, MODS):
        if "i" in Config.opts and "init" in dir(mod):
            mod.init()
    csl = Console()
    if "c" in Config.opts:
        csl.start()
        forever()
    elif Config.txt:
        evt = Event()
        evt.orig = repr(csl)
        return command(csl, evt, Config.otxt)


if __name__ == "__main__":
    wrap(main, print)
    errors(print)
